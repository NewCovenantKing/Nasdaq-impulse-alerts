import os
import datetime
import yfinance as yf
from telegram import Bot

# === Telegram setup ===
BOT_TOKEN = os.environ.get("BOT_TOKEN")       # Your BotFather token (keep as secret)
CHAT_ID = os.environ.get("CHAT_ID")           # Your personal Telegram ID (keep as secret)

if not BOT_TOKEN or not CHAT_ID:
    raise SystemExit("Missing BOT_TOKEN or CHAT_ID environment variables")

bot = Bot(token=BOT_TOKEN)

# === Market Setup ===
symbols = ["NAS100", "EURUSD=X", "GBPJPY=X"]  # Add or adjust as needed

# === Simple Elliott Wave + Silver Bullet Placeholder ===
def analyze_market(symbol):
    data = yf.download(symbol, period="5d", interval="15m", progress=False)
    if data.empty:
        return f"{symbol}: No data received."

    # Basic momentum check (placeholder for Elliott/SB logic)
    last_close = data["Close"].iloc[-1]
    prev_close = data["Close"].iloc[-2]
    direction = "📈 Bullish Impulse" if last_close > prev_close else "📉 Bearish Impulse"

    # Mock-up playbook callout
    silver_bullet = "🎯 Silver Bullet Setup possible" if abs(last_close - prev_close) / prev_close > 0.001 else "⚪ No clear SB setup yet"

    return f"{symbol}: {direction}\n{silver_bullet}\nLast Price: {last_close:.2f}"

# === Build Alert Message ===
timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
header = f"📊 *Impulse Scanner Alert*\n🕒 {timestamp}\n───────────────────────"
results = [analyze_market(symbol) for symbol in symbols]
footer = "──────────────\n_Elliott Wave + Silver Bullet Analysis_\n⚙️ Auto-generated by Impulse Scanner"

message = f"{header}\n" + "\n\n".join(results) + f"\n\n{footer}"

# === Send to Telegram ===
try:
    bot.send_message(chat_id=CHAT_ID, text=message, parse_mode="Markdown")
    print("✅ Telegram alert sent successfully.")
except Exception as e:
    print(f"❌ Telegram send failed: {e}")
    raise
